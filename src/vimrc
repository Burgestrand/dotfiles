call pathogen#infect()

set tabstop=2
set smarttab
set expandtab
set shiftwidth=2
set autoindent

" Explicitly set 256 color support
set t_Co=256

" Enable filetype-specific indenting and plugins
filetype plugin indent on

" Syntax Highlighting on
set nocompatible
syntax on

" Disable bell.
set vb t_vb=

" line numbers
set number
set numberwidth=3

" Open new horizontal split windows below current
set splitbelow

" Open new vertical split windows to the right
set splitright

" Yank from the cursor to the end of the line, to be consistent with C and D.
nnoremap Y y$

" don't wrap lines that are too long
set nowrap

" Intelligent tab completion
inoremap <silent> <Tab> <C-r>=<SID>InsertTabWrapper(1)<CR>
inoremap <silent> <S-Tab> <C-r>=<SID>InsertTabWrapper(-1)<CR>
function! <SID>InsertTabWrapper(direction)
  let idx = col('.') - 1
  let str = getline('.')
  if a:direction > 0 && idx >= 2 && str[idx - 1] == ' '
        \&& str[idx - 2] =~? '[a-z]'
    if &softtabstop && idx % &softtabstop == 0
      return "\<BS>\<Tab>\<Tab>"
    else
      return "\<BS>\<Tab>"
    endif
  elseif idx == 0 || str[idx - 1] !~? '[a-z]'
    return "\<Tab>"
  elseif a:direction > 0
    return "\<C-p>"
  else
    return "\<C-n>"
  endif
endfunction

" Shortcut to rapidly toggle `set list`
nmap <leader>l :set list!<CR>

" Use the same symbols as TextMate for tabstops and EOLs
set listchars=tab:▸\ ,eol:¬

" Remove white space-only lines before writing files
" autocmd BufWritePre * :%s/\S(\s)\+$/\1/e

" leader is set to the dash key, as it is much friendlier on a swedish
" keyboard
let mapleader = "-"

" don't ever create swap files, they're annoying!
set nobackup
set noswapfile

" Easy window navigation
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l

" browser reload plugin
map <silent><leader>r :RRB<CR>

" highlight search results
set hlsearch

" clear highlighted matches with space
nnoremap <silent> <Space> :nohlsearch<Bar>:echo<CR>

" remap enter/shift-enter to insert blank lines
map <S-Enter> O<Esc>
map <CR> o<Esc>

" Map CMD+E to NERDTreeToggle
map <D-e> :NERDTreeToggle<CR>

" Replace current line with buffer contents via ctrl-p
nmap <C-p> "_ddP
vmap <C-p> "_dP

" Set Hammer HTML template styling

" Solarized colorscheme
let g:solarized_termcolors = 256
let g:solarized_visibility = "high"
let g:solarized_contrast = "high"
colorscheme solarized
set background=light

" Syntastic configuration
" does not work: SyntasticEnable ruby
" let g:syntastic_c_no_include_search = 1
let g:syntastic_enable_signs=1
let g:syntastic_auto_loc_list=1
let g:syntastic_quiet_warnings=0
let g:syntastic_mode_map = { 'mode': 'active',
                           \ 'active_filetypes': [],
                           \ 'passive_filetypes': ['sass', 'scss'] }

" Configure vim-slime to use tmux
let g:slime_target = "tmux"

function! syntastic#c#CheckRuby()
  return ' -DHAVE_STRUCT_TIMESPEC -DHAVE_STRUCT_TIMEZONE -I/Users/Kim/.rvm/rubies/ruby-1.9.3-p327-falcon/include/ruby-1.9.1/x86_64-darwin12.2.0 -I/Users/Kim/.rvm/rubies/ruby-1.9.3-p327-falcon/include/ruby-1.9.1'
endfunction

let g:syntastic_enable_balloons = 0
